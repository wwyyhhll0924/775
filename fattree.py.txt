from mininet.net import Mininet
from mininet.node import OVSSwitch
from mininet.link import TCLink
from mininet.cli import CLI
from mininet.log import setLogLevel
from mininet.topo import Topo

class FatTreeTopology(Topo):
    def build(self):
        k = 4
        num_core = (k // 2) ** 2
        num_agg = k * (k // 2)
        num_edge = k * (k // 2)
        num_hosts = (k ** 3) // 4

        core_switches = []
        agg_switches = []
        edge_switches = []
        hosts = []

        # Add Core switches
        for i in range(num_core):
            core_switches.append(self.addSwitch('core-S{}'.format(i + 1)))

        # Add Aggregation switches
        for i in range(num_agg):
            agg_switches.append(self.addSwitch('agg-S{}'.format(i + 1)))

        # Add Edge switches
        for i in range(num_edge):
            edge_switches.append(self.addSwitch('edge-S{}'.format(i + 1)))

        # Add Hosts and connect them to Edge switches
        for i in range(num_hosts):
            host = self.addHost('h{}'.format(i + 1))
            hosts.append(host)
            edge_switch = edge_switches[i // 2]
            self.addLink(host, edge_switch, bw=12, delay='2ms')

        # Connect Edge switches to Aggregation switches
        for i in range(0, num_edge, 2):
            for j in range(num_agg // num_edge):
                self.addLink(edge_switches[i], agg_switches[j + (i // 2) * (num_agg // num_edge)], bw=12, delay='2ms')
                self.addLink(edge_switches[i + 1], agg_switches[j + (i // 2) * (num_agg // num_edge)], bw=12, delay='2ms')

        # Connect Aggregation switches to Core switches
        for i in range(num_agg):
            for j in range(num_core // num_agg):
                self.addLink(agg_switches[i], core_switches[j + (i // (num_agg // num_core)) * (num_core // num_agg)], bw=12, delay='2ms')

topos = {'fattreetopo': (lambda: FatTreeTopology())}

def run_fattree():
    topo = FatTreeTopology()
    net = Mininet(topo=topo, switch=OVSSwitch, link=TCLink)
    net.start()
    CLI(net)
    net.stop()

if __name__ == '__main__':
    setLogLevel('info')
    run_fattree()
