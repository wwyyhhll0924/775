from mininet.topo import Topo
from mininet.net import Mininet
from mininet.cli import CLI
from mininet.link import TCLink
from mininet.log import setLogLevel

class FatTreeTopo(Topo):
    def __init__(self, k=4):
        Topo.__init__(self)

        # Add 4 Core switches
        core_switches = [self.addSwitch('Core-S{}'.format(i+1), dpid='{:016x}'.format(i+1)) for i in range(k)]

        # Add 8 Aggregate switches
        agg_switches = [self.addSwitch('Agg-S{}'.format(i+1), dpid='{:016x}'.format(4+i+1)) for i in range(2*k)]

        # Add 8 Edge switches
        edge_switches = [self.addSwitch('Acc-S{}'.format(i+1), dpid='{:016x}'.format(12+i+1)) for i in range(2*k)]

        # Add 16 Hosts
        num_hosts = k * 4
        hosts = [self.addHost('h{}'.format(i+1)) for i in range(num_hosts)]

        # Connect core switches to aggregate switches
        self.addLink(core_switches[0], agg_switches[0])
        self.addLink(core_switches[0], agg_switches[2])
        self.addLink(core_switches[0], agg_switches[4])
        self.addLink(core_switches[0], agg_switches[6])
        self.addLink(core_switches[1], agg_switches[1])
        self.addLink(core_switches[1], agg_switches[3])
        self.addLink(core_switches[1], agg_switches[5])
        self.addLink(core_switches[1], agg_switches[7])
        self.addLink(core_switches[2], agg_switches[0])
        self.addLink(core_switches[2], agg_switches[2])
        self.addLink(core_switches[2], agg_switches[4])
        self.addLink(core_switches[2], agg_switches[6])
        self.addLink(core_switches[3], agg_switches[1])
        self.addLink(core_switches[3], agg_switches[3])
        self.addLink(core_switches[3], agg_switches[5])
        self.addLink(core_switches[3], agg_switches[7])

        # Connect aggregate switches to edge switches
        for i in range(k):
            x = i * 2
            self.addLink(agg_switches[x], edge_switches[x])
            self.addLink(agg_switches[x], edge_switches[x + 1])
            self.addLink(agg_switches[x + 1], edge_switches[x])
            self.addLink(agg_switches[x + 1], edge_switches[x + 1])

        # Connect edge switches to hosts
        for i in range(2 * k):
            y = i * 2
            self.addLink(edge_switches[i], hosts[y])
            self.addLink(edge_switches[i], hosts[y + 1])

topos = {'fattreetopo': FatTreeTopo}

def run_fat_tree():
    topo = FatTreeTopo(k=4)
    net = Mininet(topo=topo, link=TCLink)
    net.start()
    CLI(net)
    net.stop()

if __name__ == '__main__':
    setLogLevel('info')
    run_fat_tree()
